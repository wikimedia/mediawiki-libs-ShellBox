version: v4
base: docker-registry.wikimedia.org/php7.2-fpm:latest

lives:
  as: "composer"
  in: /srv/app

runs:
  # www-data has uid/gid 33
  uid: 33
  gid: 33
  # We want to use the run user even in development.
  insecurely: false

variants:
  build:
    # Build is the base composer build for production deployments.
    base: docker-registry.wikimedia.org/releng/composer-php72:latest
    php:
      requirements: [composer.json, composer.lock]
      production: true
  # Test is directly used for CI, but also to build the base for the dev env image
  test:
    copies: [local]
    base: docker-registry.wikimedia.org/releng/composer-package-php72:latest
    php:
      requirements: [composer.json, composer.lock]
      production: false
    runs:
      insecurely: true
    entrypoint: [composer, test]
  test-php73:
    includes: [test]
    base: docker-registry.wikimedia.org/releng/composer-package-php73:latest
  test-php74:
    includes: [test]
    base: docker-registry.wikimedia.org/releng/composer-package-php74:latest
  dev:
    copies: [test]
    builder:
      requirements:
        # Copy the entrypoint
        - from: local
          source: .pipeline/entrypoint
          destination: index.php
        # Copy the sample configuration
        - from: local
          source: config/dev-config.json
          destination: config/config.json
      # Make sure the file can only be read, but not modified
      # by the running user
      command:
        - "chmod 0444 /srv/app/config/config.json"
    runs:
      environment:
        PHP__opcache__enable: "0"
        FPM__pm__max_children: "4"
        FPM__log_level: notice
        PHP__display_errors: "stderr"
        PHP__error_log: "/dev/stdout"
        PHP__apc__shm_size: "150M"
        PHP__error_reporting: "E_ALL"

  prod:
    copies:
      # the vendor directory from build
      - from: build
        source: /srv/app/vendor
        destination: /srv/app/vendor
      # the code (not the tests) from the build context
      - from: local
        source: src
        destination: src
      # the entrypoint, also from the build context
      - from: local
        source: .pipeline/entrypoint
        destination: index.php
  media:
    copies: [prod]
    apt:
      packages:
        # core's DjVu support
        - djvulibre-bin
        # tiffinfo, for PagedTiffHandler
        - libtiff-tools
        # PDF utils, for PdfHandler
        - poppler-utils
  score:
    copies: [prod]
    apt:
      packages:
        - lilypond/buster-backports
        # Help apt use the right version of -data
        - lilypond-data/buster-backports
        - imagemagick
        - ghostscript
        - fluidsynth
        - fluid-soundfont-gs
        - fluid-soundfont-gm
        - lame
        # Fonts for lyrics
        - fonts-noto
        - fonts-noto-cjk
  syntaxhighlight:
    copies: [prod]
    apt:
      sources:
        - url: http://apt.wikimedia.org/wikimedia
          distribution: buster-wikimedia
          components: [component/pygments]
      packages:
        - python3-pygments
  # Copy 2 specific fonts out of Git
  fontprep:
    base: docker-registry.wikimedia.org/bullseye:latest
    apt:
      packages:
        - git
        - ca-certificates
    builder:
      command:
        - git
        - clone
        - "https://gerrit.wikimedia.org/r/operations/mediawiki-config/fonts"
        - "/srv/app/fonts"
  timeline:
    copies:
      - from: prod
        source: /srv/app
        destination: /srv/app
      - from: fontprep
        source: /srv/app/fonts/FreeSansWMF.ttf
        destination: /srv/app/fonts/FreeSansWMF.ttf
      - from: fontprep
        source: /srv/app/fonts/unifont-5.1.20080907.ttf
        destination: /srv/app/fonts/unifont-5.1.20080907.ttf
    apt:
      packages:
        - perl
        - ploticus
        - librsvg2-bin
        - fonts-noto
        - fonts-noto-cjk
